name: CS2 Austin Monitor

on:
  schedule:
    - cron: "7 * * * *"   # каждый час на :07 (меньше конкуренции)
    - cron: "37 * * * *"  # резерв через ~30 минут
  workflow_dispatch: {}

concurrency:
  group: cs2-austin-monitor
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  run-monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ВАЖНО: восстанавливаем .state, чтобы были "прошлые" значения ask/median
      - name: Restore state cache
        uses: actions/cache@v4
        with:
          path: .state
          # уникальный ключ для сохранения нового состояния
          key: cs2-austin-state-${{ github.run_id }}
          # а сюда подхватится последний доступный кэш с таким префиксом
          restore-keys: |
            cs2-austin-state-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml

      - name: Syntax check
        run: python -m py_compile monitor.py

      - name: Run monitor
        run: python monitor.py
        timeout-minutes: 20
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:  ${{ secrets.TELEGRAM_CHAT_ID }}
